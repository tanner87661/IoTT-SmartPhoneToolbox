[
    {
        "id": "eb6d436d.d04f9",
        "type": "tab",
        "label": "LocoNet Throttle",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a27b8512.536e38",
        "type": "mqtt out",
        "z": "eb6d436d.d04f9",
        "name": "",
        "topic": "lnIn",
        "qos": "1",
        "retain": "",
        "broker": "5bc7cc44.39f4b4",
        "x": 1096.230224609375,
        "y": 137.75,
        "wires": []
    },
    { 
        "id": "361bc22e.3f760e",
        "type": "mqtt in",
        "z": "eb6d436d.d04f9",
        "name": "",
        "topic": "lnIn",
        "qos": "1",
        "broker": "5bc7cc44.39f4b4",
        "x": 66,
        "y": 136.51123046875,
        "wires": [
            [
                "d4233cdc.52719"
            ]
        ]
    },
    {
        "id": "d4233cdc.52719",
        "type": "json",
        "z": "eb6d436d.d04f9",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 325,
        "y": 137.1779327392578,
        "wires": [
            [
                "e4bafc92.e2429"
            ]
        ]
    },
    {
        "id": "9e7f8cc7.1e89e",
        "type": "function",
        "z": "eb6d436d.d04f9",
        "name": "Create IoTT LNGW Format",
        "func": "//expected format: {Sender:\"SenderName\", MsgData:[x,x,x...x]}\n//XOR byte may or may not be included\nvar thisSender = msg.payload.Sender;\nif (thisSender === undefined)\n    thisSender = \"LNMSGGEN\";\n\nvar hasReplay = false;\nvar msgLength = 0;\nvar thisReqID = \"\";\n\nif (msg.payload.MsgData !== undefined)\n{\n    hasReply = (msg.payload.MsgData[0] & 0x08) > 0;\n    switch ((msg.payload.MsgData[0] & 0x60)>>5)\n    {\n        case 0 : msgLength = 2; break;\n        case 1 : msgLength = 4; break;\n        case 2 : msgLength = 6; break;\n        case 3 : msgLength = msg.payload.MsgData[1]; break;\n    }\n\n    if (msg.payload.MsgData.length < (msgLength - 1))\n        return null; //message has not sufficient # of bytes, nothing to send\n        \n    if (hasReply)\n    {\n        if (msg.payload.ReqID === undefined)\n            thisReqID = \"\\\"ReqID\\\":\" + Math.round(0x3FFF * Math.random()).toString() + \",\";\n        else\n            thisReqID = \"\\\"ReqID\\\":\" + msg.payload.ReqID.toString() + \",\";\n        context.set(\"ReqID\", thisReqID);\n    }\n\n    var retStr = \"{\\\"From\\\":\\\"\" + thisSender + \"\\\", \\\"Valid\\\":1, \" + thisReqID + \"\\\"Data\\\":[\";\n    var xorCode = 0;\n    for (i = 0; i < msgLength-1; i++)\n    {\n        var byteCode = msg.payload.MsgData[i];\n        retStr = retStr + byteCode.toString() + \",\"\n        xorCode = xorCode ^ byteCode;\n    }\n    xorCode = xorCode ^ 0xFF;\n    retStr = retStr + xorCode.toString() + \"]}\";\n\n    var outMsg= {payload : retStr};\n\n    return outMsg;\n}\nelse\n    return null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 886.95458984375,
        "y": 136.83837890625,
        "wires": [
            [
                "a27b8512.536e38"
            ]
        ]
    },
    {
        "id": "ec95f453.d9e888",
        "type": "debug",
        "z": "eb6d436d.d04f9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 847,
        "y": 240,
        "wires": []
    },
    {
        "id": "c9027d15.90fb2",
        "type": "ui_template",
        "z": "eb6d436d.d04f9",
        "group": "485636d7.7d6a08",
        "name": "css etc",
        "order": 8,
        "width": "0",
        "height": "0",
        "format": "<style>\n* { \n  box-sizing: border-box; \n  }\n  .filled { \n      height: 100% !important;\n        width: 50% !important;\n      padding: 0 !important;\n      margin: 0 !important;\n  }\n  .framed { \n      height: 100% !important;\n      width: 50% !important;\n      padding: 5 !important;\n      margin: 5 !important;\n  }\n  .button-cell { \n      height: 100% !important;\n      width: 50% !important;\n      padding: 5 !important;\n      margin: 5 !important;\n      text-align: center !important;\n  }\n  .radio-cell { \n//      height: 100% !important;\n//      width: 10% !important;\n//      padding: 0 !important;\n//      margin: 0 !important;\n//      text-align: left !important;\n//      font-size: 10px;\n  }\n\n  .radio-text { \n      text-align: left !important;\n      font-size: 16px;\n  }\n\n  .nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n  }\n  \n  .rounded {\n  border-radius: 12px 12px 12px 12px;\n}\n \n   .bigfont {\n  font-size: 18px;\n}\n\n   .smallfont {\n  font-size: 12px;\n}\n   .subfont {\n  font-size: 10px;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n/* Style the header */\nheader {\n  background-color: silver;\n  padding: 30px;\n  text-align: center;\n  font-size: 35px;\n  color: white;\n}\n\n/* Create two columns/boxes that floats next to each other */\nnav {\n  float: left;\n  width: 30%;\n//  height: 300px; /* only for demonstration, should be removed */\n  background: #ccc;\n  padding: 20px;\n}\n\n/* Style the list inside the menu */\nnav ul {\n  list-style-type: none;\n  padding: 0;\n}\n\narticle {\n  float: left;\n  padding: 20px;\n  width: 100%;\n  background-color: silver;\n//  height: 300px; /* only for demonstration, should be removed */\n}\n\n/* Clear floats after the columns */\nsection:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n/* Style the footer */\nfooter {\n  background-color: #777;\n  padding: 10px;\n  text-align: center;\n  color: white;\n}\n\n/* Responsive layout - makes the two columns/boxes stack on top of each other instead of next to each other, on small screens */\n@media (max-width: 600px) {\n  nav, article {\n    width: 100%;\n    height: auto;\n  }\n}\n\n.slider {\n  -webkit-appearance: none;\n  width: 100%;\n  height: 30px;\n  border-radius: 10px;  \n  background: #d3d3d3;\n  outline: none;\n  opacity: 0.7;\n  -webkit-transition: .2s;\n  transition: opacity .2s;\n}\n\n.slider::-webkit-slider-thumb { //moving dot\n  -webkit-appearance: none;\n  appearance: none;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%; \n  background: #4CAF50;\n  cursor: pointer;\n}\n\n.slider::-moz-range-thumb {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: #4CAF50;\n  cursor: pointer;\n}\n  \n/* The Modal (background) */\n.modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n  -webkit-animation-name: fadeIn; /* Fade in the background */\n  -webkit-animation-duration: 0.4s;\n  animation-name: fadeIn;\n  animation-duration: 0.4s\n}\n\n/* Modal Content */\n.modal-content {\n  position: fixed;\n  bottom: 0;\n  background-color: #fefefe;\n  width: 100%;\n  -webkit-animation-name: slideIn;\n  -webkit-animation-duration: 0.4s;\n  animation-name: slideIn;\n  animation-duration: 0.4s\n}\n\n/* The Close Button */\n.close {\n  color: white;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.modal-header {\n  padding: 2px 16px;\n  background-color: grey;\n  color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n  padding: 2px 16px;\n  background-color: grey;\n  color: white;\n}\n\n/* Add Animation */\n@-webkit-keyframes slideIn {\n  from {bottom: -300px; opacity: 0} \n  to {bottom: 0; opacity: 1}\n}\n\n@keyframes slideIn {\n  from {bottom: -300px; opacity: 0}\n  to {bottom: 0; opacity: 1}\n}\n\n@-webkit-keyframes fadeIn {\n  from {opacity: 0} \n  to {opacity: 1}\n}\n\n@keyframes fadeIn {\n  from {opacity: 0} \n  to {opacity: 1}\n}\n  \n</style>\n\n<script>\n$('.vibrate').on('click', function() {\n  navigator.vibrate(100);\n});\n\n$('.slidervibrate').on('change', function() {\n  navigator.vibrate(100);\n});\n\nfunction restore_bg(x) {\n            $(this).css(\"background-color\", x);\n    };\n\n$('.touched').on('mousedown', function() {\n    \n    var x= $(this).css(\"background-color\");\n    $(this).css(\"background-color\", \"yellow\");\n    \n    setTimeout(restore_bg.bind(this,x),100);\n    navigator.vibrate(80);\n    });\n    \n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 570,
        "y": 198,
        "wires": [
            []
        ]
    },
    {
        "id": "e4bafc92.e2429",
        "type": "ui_template",
        "z": "eb6d436d.d04f9",
        "group": "485636d7.7d6a08",
        "name": "Simplethrottle",
        "order": 1,
        "width": "7",
        "height": "12",
        "format": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Throttle</title>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n<script>\n    var cookieexp = 8; //days until cookies expire\n    var uniquID = \"1\";\n    var mySelf = \"Throttle\" + (Math.floor(Math.random() * 10000) + 1).toString();\n    var thisScope = scope;\n    var analogAddr = -1; //fields for analog input addresses. -1 if not used\n    var dirAddr = -1;\n    var lightAddr = -1;\n    var lightSel = 1; //Light\n    var analogDisrupt = true;\n    var directionDisrupt = true;\n    \n    var slotLen = 11;\n    var locoData = {\"locoIndex\":-1, \"locoArray\":[{\"inUse\":false, \"slotData\":[0,0,0,0,0,0,0,0,0,0,0,0]}, {\"inUse\":false, \"slotData\":[0,0,0,0,0,0,0,0,0,0,0,0]}, {\"inUse\":false, \"slotData\":[0,0,0,0,0,0,0,0,0,0,0,0]}, {\"inUse\":false, \"slotData\":[0,0,0,0,0,0,0,0,0,0,0,0]}]};\n    var tempData = {\"locoIndex\":0, \"locoArray\":[{\"inUse\":false, \"slotData\":[0,0,0,0,0,0,0,0,0,0,0,0]}]};\n    var myReqId = 0;\n    var btnColOn = '#C5A91B';\n    var btnColOff = '#2980B9';\n    var extDirStatus =-1;\n\t\n\n/*    \n    function timerLink() //called by timestamp in flow\n    {\n        /do what needs to be done\n        navigator.vibrate(100);\n    }\n\n*/    \n    function setCookie(cname, cvalue, exdays) \n    {\n        cname += uniquID;\n        var d = new Date();\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n        var expires = \"expires=\"+d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n    }\n\n    function getCookie(cname) \n    {\n        cname += uniquID;\n        var name = cname + \"=\";\n        var ca = document.cookie.split(';');\n        for(var i = 0; i < ca.length; i++) \n        {\n            var c = ca[i];\n            while (c.charAt(0) == ' ') \n                c = c.substring(1);\n            if (c.indexOf(name) == 0) \n                return c.substring(name.length, c.length);\n        }\n        return \"\";\n    }\n\n    function initDisplay()\n    {\n        locoData.locoIndex = -1;\n        updateLocoDisplay();\n        var hlpStr = getCookie(\"throttleid\");\n        if (hlpStr != \"\")\n            mySelf = hlpStr;\n        else\n            setCookie(\"throttleid\", mySelf, cookieexp);\n        hlpStr = getCookie(\"analogaddr\");\n        if (hlpStr != \"\")\n        {\n            var hlpAddr = parseInt(hlpStr);\n            if (!isNaN(hlpAddr))\n                analogAddr = hlpAddr;\n        }\n        hlpStr = getCookie(\"diraddr\");\n        if (hlpStr != \"\")\n        {\n            var hlpAddr = parseInt(hlpStr);\n            if (!isNaN(hlpAddr))\n                dirAddr = hlpAddr;\n        }\n        hlpStr = getCookie(\"lightaddr\");\n        if (hlpStr != \"\")\n        {\n            var hlpAddr = parseInt(hlpStr);\n            if (!isNaN(hlpAddr))\n                lightAddr = hlpAddr;\n        }\n        hlpStr = getCookie(\"lightsel\");\n        if (hlpStr != \"\")\n        {\n            var hlpSel = parseInt(hlpStr);\n            if (!isNaN(hlpSel))\n                lightSel = hlpSel;\n        }\n        var slotArray = [];\n        for (var i = 0; i < 4; i++)\n        {\n            hlpSlot = parseInt(getCookie(\"txtloco\" + (i+1).toString()));\n            if ((!isNaN(hlpSlot)) & (hlpSlot >= 0))\n            {\n                locoData.locoArray[i].slotData[0] = hlpSlot;\n                locoData.locoArray[i].inUse = true;\n                slotArray.push(hlpSlot);\n            }\n        }\n        if (slotArray.length > 0)\n            requestLoco(slotArray);\n    }\n\n    function setDisplayStatus()\n    {\n        var consistMode = (getConsistMode(locoData.locoArray[locoData.locoIndex].slotData) & 0x01) == 0x01; \n        document.getElementById(\"dir\").disabled = consistMode;\n        document.getElementById(\"stop\").disabled = consistMode;\n        document.getElementById(\"speedSlider\").disabled = consistMode;\n        document.getElementById(\"dir\").innerHTML = consistMode ? \"n/a\" : locoData.locoArray[locoData.locoIndex].slotData[4] & 0x20 ? \"DIR>>\" : \"&lt;&lt;DIR\";\n        document.getElementById(\"stop\").innerHTML = consistMode ? \"n/a\" : \"STOP\";\n\n        var newSpeed = 0;\n        var dispStr = \"00\";\n        var slotSpeed = locoData.locoArray[locoData.locoIndex].slotData[3];\n        \n        switch (slotSpeed)\n        {\n            case 0: newSpeed = 0; dispStr = \"0\"; break;\n            case 1: newSpeed = 0; dispStr = \"00\"; break;\n            default: \n                newSpeed = slotSpeed - 1; \n                dispStr = newSpeed.toString(); \n                break;\n        }\n        var myDisp = document.getElementById(\"speedDisplay\");\n        if (myDisp)\n        {\n            if (consistMode)\n                dispStr = \"consist\";\n            else\n                if (newSpeed > 0)\n                    if (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x20)\n                        dispStr = \"> \" + dispStr + \" >\";\n                    else\n                        dispStr = \"&lt; \" + dispStr + \" &lt;\";\n            myDisp.innerHTML = dispStr;\n        }\n//        document.getElementById(\"dir\").innerHTML = locoData.locoArray[locoData.locoIndex].slotData[4] & 0x20 ? \"DIR>>\" : \"&lt;&lt;DIR\";\n        document.getElementById(\"speedSlider\").value = consistMode ? 0 : newSpeed;\n        document.getElementById(\"F0\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x10)? btnColOn:btnColOff;\n        document.getElementById(\"F1\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x01)? btnColOn:btnColOff;\n        document.getElementById(\"F2\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x02)? btnColOn:btnColOff;\n        document.getElementById(\"F3\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x04)? btnColOn:btnColOff;\n        document.getElementById(\"F4\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[4] & 0x08)? btnColOn:btnColOff;\n        document.getElementById(\"F5\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[8] & 0x01)? btnColOn:btnColOff;\n        document.getElementById(\"F6\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[8] & 0x02)? btnColOn:btnColOff;\n        document.getElementById(\"F7\").style.background= (locoData.locoArray[locoData.locoIndex].slotData[8] & 0x04)? btnColOn:btnColOff;\n    }\n    \n    function invalidateButtons(status)\n    {\n        document.getElementById(\"dir\").disabled = status;\n        document.getElementById(\"stop\").disabled = status;\n        document.getElementById(\"F0\").disabled = status;\n        document.getElementById(\"F1\").disabled = status;\n        document.getElementById(\"F2\").disabled = status;\n        document.getElementById(\"F3\").disabled = status;\n        document.getElementById(\"F4\").disabled = status;\n        document.getElementById(\"F5\").disabled = status;\n        document.getElementById(\"F6\").disabled = status;\n        document.getElementById(\"F7\").disabled = status;\n        document.getElementById(\"speedSlider\").disabled = status;\n    }\n    \n    function updateLocoDisplay()\n    {\n        if (locoData.locoIndex >= 0)\n            if (locoData.locoArray[locoData.locoIndex].inUse)\n            {\n                invalidateButtons(false);\n                setDisplayStatus();\n                \n            }\n            else\n                invalidateButtons(true);\n        else\n            invalidateButtons(true);\n    }\n    \n    function processStop(sender)\n    {\n        if (locoData.locoIndex >= 0)\n        {\n            analogDisrupt = true;\n            locoData.locoArray[locoData.locoIndex].slotData[3] = 1;\n            setSpeed(locoData.locoArray[locoData.locoIndex].slotData);\n            setDisplayStatus();\n        }\n    }\n    \n    function processDir(sender)\n    {\n        if (locoData.locoIndex >= 0)\n        {\n            analogDisrupt = true;\n            locoData.locoArray[locoData.locoIndex].slotData[4] ^= 0x20; //flip DIR bit\n            locoData.locoArray[locoData.locoIndex].slotData[3] = 00; //stop locomotive\n            setSpeed(locoData.locoArray[locoData.locoIndex].slotData);\n            setDirF(locoData.locoArray[locoData.locoIndex].slotData);\n            setDisplayStatus();\n        }\n    }\n\n    function processFctInput(slotNr, bitMask, eventType)\n    {\n        switch (eventType)\n        {\n            case 0: locoData.locoArray[locoData.locoIndex].slotData[slotNr] |= bitMask; break;\n            case 1: locoData.locoArray[locoData.locoIndex].slotData[slotNr] &= ~bitMask; break;\n            case 2: locoData.locoArray[locoData.locoIndex].slotData[slotNr] ^= bitMask; break;\n        }\n    }\n\n    function processBtnClick(sender)\n    {\n        var updateStat = 0;\n        if (locoData.locoIndex >= 0)\n        {\n            switch (sender.id)\n            {\n                case \"F0\":\n                    processFctInput(4,0x10,2);\n                    updateStat = 1;\n                    break;\n                case \"F1\":\n                    processFctInput(4,0x01,2);\n                    updateStat = 1;\n                    break;\n                case \"F2\":\n                    processFctInput(4,0x02,2);\n                    updateStat = 1;\n                    break;\n                case \"F3\":\n                    processFctInput(4,0x04,2);\n                    updateStat = 1;\n                    break;\n                case \"F4\":\n                    processFctInput(4,0x08,2);\n                    updateStat = 1;\n                    break;\n                case \"F5\":\n                    processFctInput(8,0x01,2);\n                    updateStat = 2;\n                    break;\n                case \"F6\":\n                    processFctInput(8,0x02,2);\n                    updateStat = 2;\n                    break;\n                case \"F7\":\n                    processFctInput(8,0x04,2);\n                    updateStat = 2;\n                    break;\n            }\n            switch (updateStat)\n            {\n                case 1: setDirF(locoData.locoArray[locoData.locoIndex].slotData); break;\n                case 2: setFuncHi(locoData.locoArray[locoData.locoIndex].slotData); break;\n            }\n            setDisplayStatus();\n        }\n    }\n    \n    function selectLoco(slotNr)\n    {\n        if (locoData.locoIndex >= 0)\n        {\n            var dataAssign= [0xBA, slotNr, slotNr]; //OPC_MOVE_SLOTS\n            myReqId = Math.round(0x3FFF * Math.random());\n            var msg = {payload : {\"Sender\": mySelf, \"ReqID\": myReqId, \"MsgData\": dataAssign}};\n            thisScope.send(msg);\n        }\n    }\n    \n    function requestLoco(slotNrArray)\n    {\n        var dataAssign= [0xBB, slotNrArray.shift(), 0]; //OPC_RQ_SL_DATA\n        myReqId = Math.round(0x3FFF * Math.random());\n        var msg = {payload : {\"Sender\": mySelf, \"ReqID\": myReqId, \"MsgData\": dataAssign}};\n//        alert(msg);\n        thisScope.send(msg);\n        if (slotNrArray.length > 0)\n            setTimeout(requestLoco(slotNrArray), 5000);\n    }\n\n    function setLocoIndex(sender)\n    {\n        var oldIndex = locoData.locoIndex;\n        switch (sender.id)\n        {\n            case 'loco1': locoData.locoIndex = 0; break;\n            case 'loco2': locoData.locoIndex = 1; break;\n            case 'loco3': locoData.locoIndex = 2; break;\n            case 'loco4': locoData.locoIndex = 3; break;\n        }\n        analogDisrupt = oldIndex != locoData.locoIndex;\n        updateLocoDisplay();\n    }\n    \n    function setSpeed(slotData)\n    {\n        var dataSetSpd= [0xA0, slotData[0], slotData[3]]; //OPC_SPD\n        var msg = {payload : {\"Sender\": mySelf, \"MsgData\": dataSetSpd}}\n//        alert(JSON.stringify(msg.payload));\n        thisScope.send(msg);\n    }\n    \n    function setDirF(slotData)\n    {\n        var dataSetDirF= [0xA1, slotData[0], slotData[4]]; //OPC_DIRF\n        var msg = {payload : {\"Sender\": mySelf, \"MsgData\": dataSetDirF}}\n        thisScope.send(msg);\n    }\n\n    function setFuncHi(slotData)\n    {\n        var dataSetDirF= [0xA2, slotData[0], slotData[8]]; //OPC_SND\n        msg = {payload : {\"Sender\": mySelf, \"MsgData\": dataSetDirF}}\n        thisScope.send(msg);\n    }\n\n    function setSpeedDisplay(sender)\n    {\n        var newSpeed = parseInt(sender.value);\n        if (locoData.locoIndex >= 0)\n        {\n            switch (newSpeed)\n            {\n                case 0: locoData.locoArray[locoData.locoIndex].slotData[3] = newSpeed; break;\n                default: locoData.locoArray[locoData.locoIndex].slotData[3] = newSpeed + 1; break;\n            }\n            setSpeed(locoData.locoArray[locoData.locoIndex].slotData);\n            setDisplayStatus();\n        }\n    }\n\n    function processExtDirBtn(newDir)\n    {\n        if (!locoData.locoArray[locoData.locoIndex].inUse)\n            return;\n        var consistMode = (getConsistMode(locoData.locoArray[locoData.locoIndex].slotData) & 0x01) == 0x01; \n        if (consistMode)\n            return;\n        var oldDir = locoData.locoArray[locoData.locoIndex].slotData[4];\n        switch (newDir)\n        {\n            case 0: \n                locoData.locoArray[locoData.locoIndex].slotData[4] |= 0x20; \n                extDirStatus = 1;\n                break;\n            case 1: \n                locoData.locoArray[locoData.locoIndex].slotData[4] &= ~0x20; \n                extDirStatus = 0;\n                break;\n            case 2: \n                locoData.locoArray[locoData.locoIndex].slotData[4] ^= 0x20; \n                extDirStatus = -1;\n                break;\n        }\n        var newDir = locoData.locoArray[locoData.locoIndex].slotData[4];\n        if (extDirStatus != -1)\n            if (oldDir != newDir)\n            {\n                locoData.locoArray[locoData.locoIndex].slotData[3] = 0;\n                setSpeed(locoData.locoArray[locoData.locoIndex].slotData);\n                analogDisrupt = true;\n                directionDisrupt = true;\n            }\n        setDirF(locoData.locoArray[locoData.locoIndex].slotData);\n        setDisplayStatus();\n    }\n\n    function processExtSpeed(newSpeed)\n    {\n        if (!locoData.locoArray[locoData.locoIndex].inUse)\n            return;\n        var consistMode = (getConsistMode(locoData.locoArray[locoData.locoIndex].slotData) & 0x01) == 0x01; \n        if (consistMode)\n            return;\n        var currSpeed = locoData.locoArray[locoData.locoIndex].slotData[3];\n        if (newSpeed >= 0x7F)\n            newSpeed = 0x7E;\n        if (analogDisrupt || directionDisrupt)\n        {\n            analogDisrupt = (Math.abs(newSpeed - currSpeed) > 10);\n            directionDisrupt = ((locoData.locoArray[locoData.locoIndex].slotData[4] & 0x20) >> 5) != extDirStatus;\n            if (!(analogDisrupt || directionDisrupt))\n                document.getElementById(\"statSync\").innerHTML = \"\";\n        }\n        if (directionDisrupt)\n            document.getElementById(\"statSync\").innerHTML = \"Change direction\";\n        else\n            if (analogDisrupt)\n            {\n                var hlpStr = (newSpeed > currSpeed) ? \"adjust slower \":\"adjust faster \";\n                document.getElementById(\"statSync\").innerHTML = hlpStr + newSpeed.toString();\n            }\n            else\n            {\n                switch (newSpeed)\n                {\n                    case 0: locoData.locoArray[locoData.locoIndex].slotData[3] = newSpeed; break;\n                    default: locoData.locoArray[locoData.locoIndex].slotData[3] = newSpeed + 1; break;\n                }\n                setSpeed(locoData.locoArray[locoData.locoIndex].slotData);\n                setDisplayStatus();\n            }\n    }\n    \n    function processExtFct(newFct)\n    {\n        if (!locoData.locoArray[locoData.locoIndex].inUse)\n            return;\n        var consistMode = (getConsistMode(locoData.locoArray[locoData.locoIndex].slotData) & 0x01) == 0x01; \n        var updateStat = 0;\n        switch (lightSel)\n        {\n            case 0: //stop\n                if (consistMode)\n                    return;\n                if (newFct != 1) //btn down or click\n                    processStop(0);\n                break;\n            case 1: //Light\n                processFctInput(4,0x10,2);\n                updateStat = 1;\n                break;\n            case 2:\n                processFctInput(4,0x01,2);\n                updateStat = 1;\n                break;\n            case 3:\n                processFctInput(4,0x02,2);\n                updateStat = 1;\n                break;\n            case 4:\n                processFctInput(4,0x04,2);\n                updateStat = 1;\n                break;\n            case 5:\n                processFctInput(4,0x08,2);\n                updateStat = 1;\n                break;\n            case 6:\n                processFctInput(8,0x01,2);\n                updateStat = 2;\n                break;\n            case 7:\n                processFctInput(8,0x02,2);\n                updateStat = 2;\n                break;\n            case 8:\n                processFctInput(8,0x04,2);\n                updateStat = 2;\n                break;\n        }\n        switch (updateStat)\n        {\n            case 1: setDirF(locoData.locoArray[locoData.locoIndex].slotData); break;\n            case 2: setFuncHi(locoData.locoArray[locoData.locoIndex].slotData); break;\n        }\n        setDisplayStatus();\n    }\n\n    function handlePotInput(potMsg)\n    {\n        if (locoData.locoIndex >= 0)\n        {\n            if (locoData.locoArray[locoData.locoIndex].inUse)\n            {\n                if ((potMsg.BtnNr == analogAddr) && (potMsg.BtnType_N == 9)) //analog msg for me\n                {\n                    var newSpeed = Math.trunc(127 * potMsg.BtnValue/4095);\n                    processExtSpeed(newSpeed);\n                }\n                if ((potMsg.BtnNr == dirAddr) && (potMsg.BtnType_N == 2)) //digital msg for me\n                {\n                    processExtDirBtn(potMsg.LastEvent_N);\n                }\n                if ((potMsg.BtnNr == lightAddr) && (potMsg.BtnType_N == 2)) //digital msg for me\n                {\n                    processExtFct(potMsg.LastEvent_N);\n                }\n            }\n        }\n    }\n    \n// Get the modal\nvar modal = document.getElementById(\"addrModal\");\nvar analog = document.getElementById(\"addrAnalog\");\n\n// Get the <span> element that closes the modal\nvar span = document.getElementsByClassName(\"close\"); //get array of close elements\n\nfunction showAnalog(sender)\n{\n    function popField(inpField, inpVal)\n    {\n    if (inpVal >= 0)\n        document.getElementById(inpField).value = inpVal.toString();\n    else\n        document.getElementById(inpField).value = \"\";\n    }\n    \n    popField(\"addrname\", analogAddr.toString());\n    popField(\"dirname\", dirAddr.toString());\n    popField(\"lightname\", lightAddr.toString());\n    document.getElementById(\"lightsel\").selectedIndex = lightSel;\n    document.getElementById(\"throttlename\").value = mySelf;\n    analog.style.display = \"block\";\n}\n\nfunction analogInput(sender)\n{\n//    var newAddr = parseInt(document.getElementById(\"aname\").value);\n//    document.getElementById(\"setAnalog\").disabled = !((newAddr >= 0) && (newAddr < 4096))\n}\n\nfunction setAnalogAddr(sender)\n{\n    function getAddrInput(inpField)\n    {\n        var hlpStr = document.getElementById(inpField).value;\n        if (hlpStr == \"\")\n            return -1;\n        else\n        {\n            var hlpInt = parseInt(hlpStr);\n            if (!isNaN(hlpInt))\n                return hlpInt;\n            else\n                return -1;\n        }\n    }\n    \n    switch (sender.id)\n    {\n        case \"setAnalog\": \n            mySelf = document.getElementById(\"throttlename\").value; \n            analogAddr = getAddrInput(\"addrname\");\n            dirAddr = getAddrInput(\"dirname\");\n            lightAddr = getAddrInput(\"lightname\");\n            lightSel = document.getElementById(\"lightsel\").selectedIndex; \n            break;\n    }\n    setCookie(\"analogaddr\", analogAddr, cookieexp);\n    setCookie(\"diraddr\", dirAddr, cookieexp);\n    setCookie(\"lightaddr\", lightAddr, cookieexp);\n    setCookie(\"lightsel\", lightSel, cookieexp);\n    setCookie(\"throttleid\", mySelf, cookieexp);\n    analog.style.display = \"none\";\n}\n\n\n// When the user clicks the button, open the modal \nfunction openModal(sender) \n{\n    var slotName = \"\";\n    switch (locoData.locoIndex)\n    {\n       case 0:\n           slotName = \"A\";\n           break;\n       case 1:\n           slotName = \"B\";\n           break;\n       case 2:\n           slotName = \"C\";\n           break;\n       case 3:\n           slotName = \"D\";\n           break;\n    }\n    //set the current address, \n    var dispBtn = document.getElementById(\"assignDispose\");\n    dispBtn.disabled = (!locoData.locoArray[locoData.locoIndex].inUse);\n    if (locoData.locoArray[locoData.locoIndex].inUse)\n        dispBtn.innerHTML = \"Dispose \" + getLocoAddr(locoData.locoArray[locoData.locoIndex].slotData).toString();\n    else\n        dispBtn.innerHTML = \"Dispose\";\n    //then release it if in use\n    if (locoData.locoArray[locoData.locoIndex].inUse)\n        releaseSlot(locoData.locoIndex);\n\n    //show the dialog window\n    document.getElementById(\"statTitle\").innerHTML = \"Select Mobile Decoder Address for Position \" + slotName;\n    document.getElementById(\"fname\").value = \"\";\n    modal.style.display = \"block\";\n}\n\nfunction assignModal(sender)\n{\n    //update loco data\n    for (var i = 0; i < slotLen; i++)\n        locoData.locoArray[locoData.locoIndex].slotData[i] = tempData.locoArray[0].slotData[i];\n    //assign loco and \n    selectLoco(locoData.locoArray[locoData.locoIndex].slotData[0]);\n    locoData.locoArray[locoData.locoIndex].inUse = true;\n    analogDisrupt = true;\n    updateLocoDisplay();\n\n    //show address in radio button\n    var btntxtid = \"txtloco\" + (locoData.locoIndex + 1).toString();\n    var selAddr = parseInt(document.getElementById(\"fname\").value);\n    document.getElementById(btntxtid).innerHTML = selAddr.toString();\n    setCookie(btntxtid, locoData.locoArray[locoData.locoIndex].slotData[0], cookieexp);\n    \n    //hide dialog window\n    modal.style.display = \"none\";\n}\n    \nfunction cancelModal(sender)\n{\n    //close modal dialog\n    modal.style.display = \"none\";\n    //reassign old loco and \n    //show address in radio button\n    //update loco data\n    updateLocoDisplay();\n}\n\nfunction disposeModal(sender)\n{\n    //send dispose message\n    disposeSlot(locoData.locoIndex);\n    var btntxtid = \"txtloco\" + (locoData.locoIndex + 1).toString();\n    document.getElementById(btntxtid).innerHTML = \"n/a\";\n    setCookie(btntxtid, -1, cookieexp);\n    //set slot inUse to false\n    locoData.locoArray[locoData.locoIndex].inUse = false;\n    var dispBtn = document.getElementById(\"assignDispose\");\n    dispBtn.disabled = (!locoData.locoArray[locoData.locoIndex].inUse);\n    if (locoData.locoArray[locoData.locoIndex].inUse)\n        dispBtn.innerHTML = \"Dispose \" + getLocoAddr(locoData.locoArray[locoData.locoIndex].slotData).toString();\n    else\n        dispBtn.innerHTML = \"Dispose\";\n    updateLocoDisplay();\n}\n\nfunction addrInput(sender)\n{\n    var currAddr = parseInt(sender.value);\n    if (currAddr != NaN)\n    {\n        var dataReqSl= [0xBF,0x00,0x00];\n        dataReqSl[1] = (currAddr & 0x3F80) >>> 7;\n        dataReqSl[2] = (currAddr & 0x007F);\n        myReqId = Math.round(0x3FFF * Math.random());\n        var msg = {payload : {\"Sender\": mySelf, \"ReqID\": myReqId, \"MsgData\": dataReqSl}};\n        thisScope.send(msg);\n    }\n}\n\nfunction releaseSlot(slotIndex)\n{\n    if (slotIndex >= 0)\n    {\n        var dataRelease= [0xB5, locoData.locoArray[slotIndex].slotData[0], locoData.locoArray[slotIndex].slotData[1] & (~0x20)]; //OPC_SLOT_STAT1\n        var msg = {payload : {\"Sender\": mySelf, \"MsgData\": dataRelease}};\n        thisScope.send(msg);\n    }\n}\n\nfunction disposeSlot(slotIndex)\n{\n    //send slot move command\n    var lastSlotNr = locoData.locoArray[slotIndex].slotData[0];\n    var dataAssign= [0xBA, lastSlotNr, 0]; //OPC_MOVE_SLOTS Dispatch Put\n    var msg = {payload : {\"Sender\": mySelf, \"ReqID\": myReqId, \"MsgData\": dataAssign}};\n//    alert(msg.payload);\n    thisScope.send(msg);\n}\n\nfunction assignSlot(slotIndex)\n{\n    //copy tempSlotData to indexed Slot\n    for (var i = 0; i < slotLen; i++)\n        locoData.locoArray[slotIndex].slotData[i] = tempSlot.locoArray[0].slotData[i];\n    //send slot move command\n    var lastSlotNr = locoData.locoArray[slotIndex].slotData[0];\n    var dataAssign= [0xBA, lastSlotNr, lastSlotNr]; //OPC_MOVE_SLOTS Assign\n    var msg = {payload : {\"Sender\": mySelf, \"ReqID\": myReqId, \"MsgData\": dataAssign}};\n    thisScope.send(msg);\n}\n\n// When the user clicks on <span> (x), close the modal\nspan[0].onclick = function() {modal.style.display = \"none\";}\nspan[1].onclick = function() {analog.style.display = \"none\";}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {if (event.target == modal) {modal.style.display = \"none\";} if (event.target == analog) {analog.style.display = \"none\";}}\n//window.close = alert(\"unload\");\n\nfunction getLocoAddr(slotData)\n{\n    var newAddr = (slotData[2] & 0x7F) + ((slotData[7] & 0x7F)<<7);\n    return newAddr;\n}\n\nfunction getConsistMode(slotData)\n{\n    return ((slotData[1] & 0x08) >> 2) + ((slotData[1] & 0x40) >> 6);\n}\n\nfunction msgHandler(thisPayload) //payload. topic is always the lnIn topic\n{\n \n    var opCode;\n    var hasReply;\n    var msgLength;\n//    if (thisPayload.From != mySelf) //don't process your own messages\n    {\n        opCode = thisPayload.Data[0];\n        hasReply = (opCode & 0x08) > 0;\n        switch ((opCode & 0x60)>>5)\n        {\n            case 0 : msgLength = 2; break;\n            case 1 : msgLength = 4; break;\n            case 2 : msgLength = 6; break;\n            case 3 : msgLength = thisPayload.Data[1]; \n                     opCode = (opCode << 8) + msgLength; break;\n            default: opCode = -1; break;\n        }\n        switch (opCode)\n        {\n        case 0xA0: //OPC_LOCO_SPD  \n            for (var j = 0; j < 4; j++)\n                if (locoData.locoArray[j].slotData[0] === thisPayload.Data[1])\n                {\n                    locoData.locoArray[j].slotData[3] = thisPayload.Data[2];\n                    if (j == locoData.locoIndex)\n                        setDisplayStatus();\n                }\n            break;\n        case 0xA1: //OPC_LOCO_DIRF  \n            for (var j = 0; j < 4; j++)\n                if (locoData.locoArray[j].slotData[0] === thisPayload.Data[1])\n                {\n                    locoData.locoArray[j].slotData[4] = thisPayload.Data[2];\n                    if (j == locoData.locoIndex)\n                        setDisplayStatus();\n                }\n            break;\n        case 0xA2: //OPC_LOCO_SND  \n            for (var j = 0; j < 4; j++)\n                if (locoData.locoArray[j].slotData[0] === thisPayload.Data[1])\n                {\n                    locoData.locoArray[j].slotData[8] = thisPayload.Data[2];\n                    if (j == locoData.locoIndex)\n                        setDisplayStatus();\n                }\n            break;\n        case 0xE70E : //SL_RD_DATA\n            if (thisPayload.From != mySelf) //don't process your own messages\n            {\n                var locoAddr;\n                var slotNr = parseInt(thisPayload.Data[2]);\n                if (myReqId == thisPayload.ReqID) // result of our request, put it in temp\n                {\n                    var dispString = document.getElementById(\"statDisp\");\n                    if (slotNr <= 0x77) //valid information\n                    {\n                        for (var i = 0; i < slotLen; i++)\n                            tempData.locoArray[0].slotData[i] = thisPayload.Data[i+2];\n                        locoAddr = getLocoAddr(tempData.locoArray[0].slotData);\n                        if (modal.style.display == \"block\")\n                        {\n                            var slotStatus = (tempData.locoArray[0].slotData[1]);\n                            var consistMode = getConsistMode(tempData.locoArray[0].slotData); //(slotStatus & 0x08) >> 2) + ((slotStatus & 0x40) >> 6);\n                            var hlpStr = \"\";\n                            var speedStepMode = slotStatus & 0x07;\n                            switch (speedStepMode)\n                            {\n                                case 0: hlpStr = \"28 Step regular\"; break;    \n                                case 1: hlpStr = \"28 Step trinary\"; break;    \n                                case 2: hlpStr = \"14 Step regular\"; break;    \n                                case 3: hlpStr = \"128 Step regular\"; break;    \n                                case 4: hlpStr = \"28 Step adv cn\"; break;    \n                                case 5: hlpStr = \"not defined\"; break;    \n                                case 6: hlpStr = \"not defined\"; break;    \n                                case 7: hlpStr = \"128 Step adv cn\"; break;    \n                                default: hlpStr = \"Numeric Status: \" + slotStatus.toString(); break;\n                            }\n                            switch (consistMode)\n                            {\n                                case 0: break;\n                                case 1: hlpStr += \" - CONSIST BOTTOM\"; break;\n                                case 2: hlpStr += \" - CONSIST TOP\"; break;\n                                case 3: hlpStr += \" - CONSIST MIDDLE\"; break;\n                                default: hlpStr += \" - CONSIST unknown \" + consistMode.toString(); break;\n                            }\n                            var opsStatus = (slotStatus & 0x30 ) >>> 4;\n                            switch (opsStatus)\n                            {\n                                case 0: hlpStr += \" - FREE\"; break;    \n                                case 1: hlpStr += \" - COMMON\"; break;    \n                                case 2: hlpStr += \" - IDLE\"; break;    \n                                case 3: hlpStr += \" - IN USE\"; break;    \n                            }\n                            dispString.innerHTML = hlpStr;\n                            var assignBtn = document.getElementById(\"assignLoco\");\n//                            assignBtn.disabled = (consistMode & 0x01);\n                            assignBtn.innerHTML = (opsStatus == 0x03) ? \"Steal\" : \"Assign\";\n                        }\n                    }    \n                }\n                else\n                {\n                    //unsolicited OPC_SL_RD_DATA\n                }\n                        for (var j = 0; j < 4; j++)\n                            if (locoData.locoArray[j].slotData[0] === slotNr)\n                            {\n                                var oldLocoAddr = getLocoAddr(locoData.locoArray[j].slotData);\n                                for (var i = 0; i < slotLen; i++)\n                                    locoData.locoArray[j].slotData[i] = thisPayload.Data[i+2];\n                                var newLocoAddr = getLocoAddr(locoData.locoArray[j].slotData);\n                                if (oldLocoAddr != newLocoAddr)\n                                {\n                                    if (locoData.locoArray[j].inUse)\n                                        document.getElementById(\"txtloco\" + (j+1).toString()).innerHTML = newLocoAddr.toString();\n                                }      \n                            }\n            }\n            break;\n        case 0xE510: //OPC_PEER_XFER for analog input\n            if (locoData.locoIndex >= 0)\n            {\n                thisAddr = (thisPayload.Data[8] & 0x7F) + ((thisPayload.Data[9] & 0x7F)<<7);\n                if ((thisAddr == dirAddr) && locoData.locoArray[locoData.locoIndex].inUse)\n                {\n                    var thisEvent = thisPayload.Data[12] & 0x3F; //???\n                    processExtDirBtn(thisEvent);\n                }\n                if ((thisAddr == lightAddr) && locoData.locoArray[locoData.locoIndex].inUse)\n                {\n                    var thisEvent = thisPayload.Data[12] & 0x3F; //???\n                    processExtFct(thisEvent);\n                }\n                if ((thisAddr == analogAddr) && locoData.locoArray[locoData.locoIndex].inUse)\n                {\n                    var newSpeed = Math.trunc(127 * ((thisPayload.Data[12] & 0x3F) + ((thisPayload.Data[13] & 0x3F)<<6)) / 4095);\n                    processExtSpeed(newSpeed);\n                }\n            }\n            break;\n        default:    \n            break;\n        }\n    }\n    \n}\n\n\n(function() {\n    (function(scope) {\n        scope.$watch('msg', function(msg) {\n            if (msg) \n//                msgHandler(msg.payload); \n\n                switch (msg.topic)\n                {\n                    case \"flowTimer\": \n                        break;\n                    case \"BTNREPORT\":\n                        handlePotInput(msg.payload);\n                        break;\n                    case \"lnIn\": \n                        msgHandler(msg.payload); \n                        break;\n                }\n        });\n    })(scope);\n})();\n\n</script>\n\n</head>\n\n<body>\n\n<header>\n  <h2 id=\"speedDisplay\">0</h2>\n    <table width=\"100%\">\n        <tr>\n            <td  class=\"button-cell\">\n                <md-button class=\"vibrate framed touched bigfont rounded\" id=\"dir\" style=\"background-color:#2980b9\"   onclick=\"processDir(this)\"> \n                    DIR>>\n                </md-button>\n            </td>\n            <td  class=\"button-cell\">\n                <md-button class=\"vibrate filled touched bigfont rounded\" id=\"stop\" style=\"background-color:#c0392b\" onclick=\"processStop(this)\"> \n                    STOP\n                </md-button>        \n            </td>\n        </tr>\n    </table>\n    <p class = \"subfont\" id=\"statSync\"></p>\n  <p>\n    <input type=\"radio\" class=\"radio-cell\" id=\"loco1\" name=\"locoset\" value=\"\" onclick=\"setLocoIndex(this)\" ondblclick=\"openModal(this)\">\n    <label for=\"loco1\" class=\"radio-text\" id=\"txtloco1\" ondblclick=\"openModal(this)\">n/a</label>\n    <input type=\"radio\" class=\"radio-cell\" id=\"loco2\" name=\"locoset\" value=\"\" onclick=\"setLocoIndex(this)\" ondblclick=\"openModal(this)\">\n    <label for=\"loco2\" class=\"radio-text\" id=\"txtloco2\" ondblclick=\"openModal(this)\">n/a</label>\n    <input type=\"radio\" class=\"radio-cell\" id=\"loco3\" name=\"locoset\" value=\"\" onclick=\"setLocoIndex(this)\" ondblclick=\"openModal(this)\">\n    <label for=\"loco3\" class=\"radio-text\" id=\"txtloco3\" ondblclick=\"openModal(this)\">n/a</label>\n    <input type=\"radio\" class=\"radio-cell\" id=\"loco4\" name=\"locoset\" value=\"\" onclick=\"setLocoIndex(this)\" ondblclick=\"openModal(this)\">\n    <label for=\"loco4\" class=\"radio-text\" id=\"txtloco4\" ondblclick=\"openModal(this)\">n/a</label>\n      \n  </p>\n</header>\n<div class=\"slidecontainer\">\n  <input type=\"range\" min=\"0\" max=\"126\" value=\"0\" class=\"slider slidervibrate\" id=\"speedSlider\" oninput=\"setSpeedDisplay(this)\" >\n</div>\n<section>\n  <article>\n     <table width=\"100%\">\n         <tr>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F0\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            Light\n        </md-button>\n           </td>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F1\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F1\n        </md-button>\n           </td>\n         </tr>\n         <tr><td>&nbsp;</td></tr>\n         <tr>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F2\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F2\n        </md-button>\n           </td>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F3\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F3\n        </md-button>\n           </td>\n          </tr>\n         <tr><td>&nbsp;</td></tr>\n         <tr>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F4\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F4\n        </md-button>\n           </td>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F5\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F5\n        </md-button>\n           </td>\n          </tr>\n         <tr><td>&nbsp;</td></tr>\n         <tr>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F6\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F6\n        </md-button>\n           </td>\n           <td  class=\"button-cell\">\n        <md-button class=\"vibrate framed bigfont rounded\" id=\"F7\" style=\"background-color:#2980b9\" onclick=\"processBtnClick(this)\"> \n            F7\n        </md-button>\n           </td>\n          </tr>\n    </table>\n  </article>\n</section>\n\n<footer>\n  <p id=\"analoglink\" ondblclick=\"showAnalog(this)\">IoTT</p>\n</footer>\n\n<!-- The Modal -->\n<div id=\"addrModal\" class=\"modal\">\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <span class=\"close\">&times;</span>\n      <h3 id=\"statTitle\"></h3>\n    </div>\n    <div class=\"modal-body\">\n        <p>\n            <label for=\"fname\">Address:</label>\n            <input type=\"text\" id=\"fname\" name=\"fname\" oninput=\"addrInput(this)\">\n        </p>\n        <p id=\"statDisp\">Status: </p>\n        <p>\n            <button type=\"button\" id=\"assignLoco\" onclick=\"assignModal(this)\" >Assign</button>\n            <button type=\"button\" id=\"assignDispose\" onclick=\"disposeModal(this)\" >Dispose</button>\n            &nbsp;\n            <button type=\"button\" id=\"assignCancel\" onclick=\"cancelModal(this)\" >Cancel</button>\n        </p>\n    </div>\n    <div class=\"modal-footer\">\n      <h3>Click Assign to complete</h3>\n    </div>\n  </div>\n</div>\n\n<!-- The Modal -->\n<div id=\"addrAnalog\" class=\"modal\">\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <span class=\"close\">&times;</span>\n      <h3>Throttle Setup</h3>\n    </div>\n    <div class=\"modal-body\">\n        <p>\n            <label for=\"throttlename\">Throttle Name:</label>\n            <input type=\"text\" size=\"15\" id=\"throttlename\" name=\"throttlename\">\n        </p>\n        <p>\n            <label for=\"addrname\">Pot. Addr.:</label>\n            <input type=\"text\" size=\"4\" id=\"addrname\" name=\"addrname\" oninput=\"analogInput(this)\">\n            <label for=\"dirname\">Dir Addr.:</label>\n            <input type=\"text\" size=\"4\" id=\"dirname\" name=\"dirname\" oninput=\"analogInput(this)\">\n        </p>\n        <p>\n            <label for=\"lightname\">3rd Btn. Addr.:</label>\n            <input type=\"text\" size=\"4\" id=\"lightname\" name=\"lightname\" oninput=\"analogInput(this)\">\n            <label for=\"lightsel\">3rd Btn. Addr.:</label>\n            <select id=\"lightsel\" name=\"lightsel\">\n                <option value=\"-1\">STOP</option>\n                <option value=\"0\">Light</option>\n                <option value=\"1\">F1</option>\n                <option value=\"2\">F2</option>\n                <option value=\"3\">F3</option>\n                <option value=\"4\">F4</option>\n                <option value=\"5\">F5</option>\n                <option value=\"6\">F6</option>\n                <option value=\"7\">F7</option>\n            </select>       \n        </p>\n        <p>\n            <button type=\"button\" id=\"setAnalog\" onclick=\"setAnalogAddr(this)\" >Save</button>\n             &nbsp;\n            <button type=\"button\" id=\"cancelAnalog\" onclick=\"setAnalogAddr(this)\" >Cancel</button>\n        </p>\n    </div>\n    <div class=\"modal-footer\">\n      <h3>Click Save to make permanent</h3>\n    </div>\n  </div>\n</div>\n\n<script>\n    setTimeout(initDisplay, 500);\n</script>\n\n</body>\n</html>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 590,
        "y": 138,
        "wires": [
            [
                "9e7f8cc7.1e89e",
                "ec95f453.d9e888"
            ]
        ]
    },
    {
        "id": "5de3c206.553aac",
        "type": "mqtt in",
        "z": "eb6d436d.d04f9",
        "name": "Pot Input",
        "topic": "BTNREPORT",
        "qos": "2",
        "broker": "5bc7cc44.39f4b4",
        "x": 73,
        "y": 199,
        "wires": [
            [
                "d4233cdc.52719"
            ]
        ]
    },
    {
        "id": "5bc7cc44.39f4b4",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "192.168.87.52",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "485636d7.7d6a08",
        "type": "ui_group",
        "z": "",
        "name": "Throttle",
        "tab": "804c44b1.459408",
        "order": 2,
        "disp": false,
        "width": "7",
        "collapse": false
    },
    {
        "id": "804c44b1.459408",
        "type": "ui_tab",
        "z": "",
        "name": "LocoNet Throttle",
        "icon": "dashboard",
        "order": 1
    }
]
